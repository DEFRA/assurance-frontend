{% extends "layouts/page.njk" %}

{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/breadcrumbs/macro.njk" import govukBreadcrumbs %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from "status-tag.njk" import renderStatusTag %}

{% block beforeContent %}
  {{ govukBreadcrumbs({
    items: [
      {
        text: "Projects",
        href: "/"
      },
      {
        text: project.name
      },
      {
        text: "Manage project",
        href: "/projects/" + project.id + "/manage"
      },
      {
        text: "Update status and commentary"
      }
    ]
  }) }}
{% endblock %}

{% block content %}
  <h1 class="govuk-heading-xl">
    {% if isEditMode %}
      Edit Project Status and Commentary
    {% else %}
      Update Project Status and Commentary
    {% endif %}
  </h1>
  <h2 class="govuk-heading-l govuk-!-margin-bottom-6">{{ project.name }}</h2>
  
  {% if isEditMode and existingHistoryEntry %}
    <div class="govuk-inset-text">
      <p class="govuk-body">You are editing the project status update from <strong>{{ existingHistoryEntry.timestamp | formatDate }}</strong>.</p>
    </div>
  {% endif %}
  
  {% if errorMessage %}
    {{ govukErrorSummary({
      titleText: "There is a problem",
      errorList: [
        {
          text: errorMessage
        }
      ]
    }) }}
  {% endif %}

  <form method="POST"{% if isEditMode and existingHistoryEntry %} action="?edit=true&historyId={{ existingHistoryEntry.id }}"{% endif %} novalidate>
    {{ govukSelect({
      id: "status",
      name: "status",
      label: {
        text: "Current status",
        classes: "govuk-label--m"
      },
      items: statusOptions,
      value: values.status or project.status,
      errorMessage: errors.status,
      required: true
    }) }}

    {# Generate suggested update from standards at risk #}
    {% set suggestedUpdate = "" %}
    {% if standardsAtRisk and standardsAtRisk.length > 0 %}
      {% set issues = [] %}
      {% set paths = [] %}
      
      {# Process each comment to extract issue and path parts #}
      {% for standard in standardsAtRisk %}
        {% if standard.professionComments and standard.professionComments.length > 0 %}
          {% for comment in standard.professionComments %}
            {% if comment.commentary %}
              {% if "Path to green:" in comment.commentary %}
                {% set parts = comment.commentary.split("Path to green:") %}
                {% if parts[0] %}
                  {% set issue = parts[0] | trim %}
                  {% if issue %}
                    {# Remove trailing period to avoid double periods #}
                    {% if issue.endsWith(".") %}
                      {% set issue = issue.slice(0, -1) %}
                    {% endif %}
                    {% set issues = (issues.push(issue), issues) %}
                  {% endif %}
                {% endif %}
                {% if parts[1] %}
                  {% set path = parts[1] | trim %}
                  {% if path %}
                    {% set paths = (paths.push(path), paths) %}
                  {% endif %}
                {% endif %}
              {% else %}
                {# If no "Path to green:", treat whole commentary as issue #}
                {% set cleanComment = comment.commentary | trim %}
                {% if cleanComment.endsWith(".") %}
                  {% set cleanComment = cleanComment.slice(0, -1) %}
                {% endif %}
                {% set issues = (issues.push(cleanComment), issues) %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endfor %}
      
      {# Build the suggested update text #}
      {% if issues.length > 0 or paths.length > 0 %}
        {% if issues.length > 0 %}
          {% set suggestedUpdate = issues.join(". ") %}
          {% if not suggestedUpdate.endsWith(".") %}
            {% set suggestedUpdate = suggestedUpdate + "." %}
          {% endif %}
        {% endif %}
        
        {% if paths.length > 0 %}
          {% if suggestedUpdate %}
            {% set suggestedUpdate = suggestedUpdate + "<br><br>" %}
          {% endif %}
          {% for path in paths %}
            {% set suggestedUpdate = suggestedUpdate + "â€¢ " + path %}
            {% if not loop.last %}
              {% set suggestedUpdate = suggestedUpdate + "<br>" %}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endif %}
    {% endif %}

    {# Build hint text without the suggested update #}
    {% set baseHint = "Update on project progress, challenges, and key developments. Consider addressing any concerning standards listed below." %}

    {{ govukTextarea({
      name: "commentary",
      id: "commentary",
      label: {
        text: "Project commentary",
        classes: "govuk-label--m"
      },
      hint: {
        html: baseHint
      },
      value: values.commentary or project.commentary,
      errorMessage: errors.commentary,
      required: true,
      rows: 10
    }) }}

    {# Add Details component for suggested update if there is one #}
    {% if suggestedUpdate and suggestedUpdate != "" %}
      {{ govukDetails({
        summaryText: "Suggested update based on concerning standards",
        html: "<div style='font-style: italic;'>" + suggestedUpdate + "</div>"
      }) }}
    {% endif %}

    <div class="govuk-button-group">
      {{ govukButton({
        text: "Save changes"
      }) }}

      {{ govukButton({
        text: "Cancel",
        href: "/projects/" + project.id,
        classes: "govuk-button--secondary"
      }) }}
    </div>
  </form>

  {# Standards at risk section #}
  {% if standardsAtRisk and standardsAtRisk.length > 0 %}
    <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
    
    <h2 class="govuk-heading-m">Standards Requiring Attention</h2>
    <p class="govuk-body">The following standards have concerning assessments that you may want to address in your project commentary:</p>
    
    {# Build table data structure more simply #}
    <div class="govuk-table-responsive">
      <table class="govuk-table standards-at-risk-table">
        <thead class="govuk-table__head">
          <tr class="govuk-table__row">
            <th scope="col" class="govuk-table__header">Service Standard</th>
            <th scope="col" class="govuk-table__header">Status</th>
            <th scope="col" class="govuk-table__header">Profession</th>
            <th scope="col" class="govuk-table__header">Assessment Commentary</th>
            <th scope="col" class="govuk-table__header">Last Updated</th>
          </tr>
        </thead>
        <tbody class="govuk-table__body">
          {% for standard in standardsAtRisk %}
            {% if standard.professionComments.length > 0 %}
              {% for comment in standard.professionComments %}
                <tr class="govuk-table__row">
                  <td class="govuk-table__cell">
                    <strong>Standard {{ standard.number }}</strong><br>{{ standard.name }}
                  </td>
                  <td class="govuk-table__cell">
                    {{ renderStatusTag(standard.status) }}
                  </td>
                  <td class="govuk-table__cell">
                    {{ comment.professionName }}
                  </td>
                  <td class="govuk-table__cell">
                    {% if comment.commentary %}
                      {% if "Path to green:" in comment.commentary %}
                        {% set parts = comment.commentary.split("Path to green:") %}
                        {% set issue = parts[0] | trim if parts[0] else "" %}
                        {% set path = parts[1] | trim if parts[1] else "" %}
                        
                        {% if issue and path %}
                          {{ issue + "\r\n\r\n" + path }}
                        {% elif issue %}
                          {{ issue }}
                        {% elif path %}
                          {{ path }}
                        {% endif %}
                      {% else %}
                        {{ comment.commentary }}
                      {% endif %}
                    {% else %}
                      No commentary
                    {% endif %}
                  </td>
                  <td class="govuk-table__cell">
                    {{ (standard.lastUpdated | formatDate) if standard.lastUpdated else "Not available" }}
                  </td>
                </tr>
              {% endfor %}
            {% else %}
              <tr class="govuk-table__row">
                <td class="govuk-table__cell">
                  <strong>Standard {{ standard.number }}</strong><br>{{ standard.name }}
                </td>
                <td class="govuk-table__cell">
                  {{ renderStatusTag(standard.status) }}
                </td>
                <td class="govuk-table__cell" colspan="2">
                  <span class="govuk-hint govuk-!-font-size-14">No assessments</span>
                </td>
                <td class="govuk-table__cell">
                  {{ (standard.lastUpdated | formatDate) if standard.lastUpdated else "Not available" }}
                </td>
              </tr>
            {% endif %}
          {% endfor %}
        </tbody>
      </table>
    </div>
  {% endif %}
{% endblock %}

{% block pageStyles %}
<style>
  .standards-at-risk-table td {
    vertical-align: top;
  }
  
  /* Make the table more compact */
  .standards-at-risk-table td,
  .standards-at-risk-table th {
    padding: 10px 20px 10px 0;
  }
  
  .standards-at-risk-table th:last-child,
  .standards-at-risk-table td:last-child {
    padding-right: 0;
  }
  
  /* Preserve line breaks in commentary */
  .standards-at-risk-table td:nth-child(4) {
    white-space: pre-wrap;
  }
</style>
{% endblock %}

{% block bodyEnd %}
<script nonce="{{nonce}}">
  // Simple script block - no complex template logic
</script>
{% endblock %} 