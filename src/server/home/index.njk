{% extends 'layouts/page.njk' %}

{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/table/macro.njk" import govukTable %}

{% block content %}
  {{ appHeading({
    text: "Projects"
  }) }}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <form method="GET" action="/" class="govuk-!-margin-bottom-6">
        <div class="govuk-grid-row">
          <div class="govuk-grid-column-two-thirds">
            <div class="govuk-form-group">
              <label class="govuk-label govuk-label--s" for="search">
                Search projects
              </label>
              <div id="search-container" class="govuk-!-margin-bottom-0"></div>
            </div>
          </div>
          <div class="govuk-grid-column-one-third">
            <div class="govuk-form-group" style="margin-top: 30px;">
              {{ govukButton({
                text: "Search"
              }) }}
              
              {% if searchTerm %}
                <a href="/" class="govuk-link govuk-!-margin-left-3">Clear search</a>
              {% endif %}
            </div>
          </div>
        </div>
      </form>

      {% if isAuthenticated %}
      {{ govukButton({
        text: "Add new project",
        href: "/projects/add",
        classes: "govuk-button--secondary govuk-!-margin-bottom-6"
      }) }}
      {% endif %}

      <p class="govuk-body">{{ description }}</p>

      {% if projects and projects.length > 0 %}
        {% set tableRows = [] %}
        {% for project in projects %}
          {% set statusClass = '' %}
          {% if project.status === 'RED' %}
            {% set statusClass = 'govuk-tag--red' %}
          {% elif project.status === 'AMBER' %}
            {% set statusClass = 'govuk-tag--yellow' %}
          {% elif project.status === 'GREEN' %}
            {% set statusClass = 'govuk-tag--green' %}
          {% endif %}

          {% set row = [
            {
              html: "<a href='/projects/" + project.id + "' class='govuk-link'>" + project.name + "</a>"
            },
            {
              html: "<strong class='govuk-tag " + statusClass + "'>" + project.status + "</strong>"
            }
          ] %}
          {% set tableRows = (tableRows.push(row), tableRows) %}
        {% endfor %}

        {{ govukTable({
          head: [
            {
              text: "Project name"
            },
            {
              text: "RAG status"
            }
          ],
          rows: tableRows
        }) }}
      {% else %}
        <p class="govuk-body">No projects found.</p>
      {% endif %}
    </div>
  </div>
{% endblock %}

{% block pageStyles %}
<style>
  /* Add GDS Transport font for autocomplete */
  @font-face {
    font-family: "GDS Transport";
    src: url("/fonts/light-94a07e06a1-v2.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
    font-display: fallback;
  }
  
  @font-face {
    font-family: "GDS Transport";
    src: url("/fonts/bold-b542beb274-v2.woff2") format("woff2");
    font-weight: bold;
    font-style: normal;
    font-display: fallback;
  }
  
  /* Override autocomplete with GDS styling - using more specific selectors */
  .govuk-template .autocomplete__wrapper * {
    font-family: "GDS Transport", arial, sans-serif !important;
  }
  
  .govuk-template .autocomplete__wrapper {
    font-family: "GDS Transport", arial, sans-serif !important;
  }
  
  .govuk-template .autocomplete__input {
    font-family: "GDS Transport", arial, sans-serif !important;
    font-size: 19px !important;
    line-height: 1.25 !important;
    padding: 5px !important;
    height: 40px !important;
    border: 2px solid #0b0c0c !important;
  }
  
  /* Target the menu and options specifically */
  .govuk-template .autocomplete__menu {
    font-family: "GDS Transport", arial, sans-serif !important;
    background-color: #fff !important;
    border: 2px solid #0b0c0c !important;
    border-top: 0 !important;
    width: 100% !important;
    max-height: 342px !important;
    margin: 0 !important;
    padding: 0 !important;
  }
  
  /* Target all options in the dropdown */
  .govuk-template .autocomplete__menu .autocomplete__option {
    font-family: "GDS Transport", arial, sans-serif !important;
    font-size: 16px !important;
    line-height: 1.5 !important;
    padding: 8px !important;
    border-bottom: 1px solid #b1b4b6 !important;
    color: #0b0c0c !important;
    background-color: #fff !important;
  }
  
  /* Target odd options specifically */
  .govuk-template .autocomplete__menu .autocomplete__option--odd {
    background-color: #f3f2f1 !important;
  }
  
  /* Override hover and focus states */
  .govuk-template .autocomplete__menu .autocomplete__option:hover,
  .govuk-template .autocomplete__menu .autocomplete__option--focused {
    background-color: #1d70b8 !important;
    border-color: #1d70b8 !important;
    color: white !important;
    outline: none !important;
  }
  
  /* Selected option */
  .govuk-template .autocomplete__menu .autocomplete__option--selected {
    background-color: #1d70b8 !important;
    color: white !important;
  }
  
  /* Override media query styles */
  @media (min-width: 641px) {
    .govuk-template .autocomplete__hint,
    .govuk-template .autocomplete__input,
    .govuk-template .autocomplete__option {
      font-family: "GDS Transport", arial, sans-serif !important;
      font-size: 19px !important;
      line-height: 1.31579 !important;
    }
  }
</style>
{% endblock %}

{% block pageScripts %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Create a source array with project names and IDs for easy lookup
    const projects = {{ projects | dump | safe }};
    const projectsById = {};
    const projectsByName = {};
    
    // Create lookup maps for faster access
    projects.forEach(project => {
      projectsById[project.id] = project;
      projectsByName[project.name] = project;
    });
    
    // Create a list of project names for the autocomplete
    const projectNames = projects.map(project => project.name);
    
    // Initialize the GOV.UK accessible autocomplete
    accessibleAutocomplete({
      element: document.querySelector('#search-container'),
      id: 'search',
      name: 'search',
      defaultValue: '{{ searchTerm }}',
      source: projectNames,
      placeholder: 'Start typing to search',
      autoselect: false,
      confirmOnBlur: false,
      showNoOptionsFound: true,
      minLength: 2,
      displayMenu: 'overlay',
      onConfirm: function(selectedProjectName) {
        if (selectedProjectName) {
          // If a project was selected from the dropdown, navigate to its page
          const project = projectsByName[selectedProjectName];
          if (project && project.id) {
            window.location.href = `/projects/${project.id}`;
          }
        }
      },
      tNoResults: function() { 
        return 'No projects found';
      },
      tStatusQueryTooShort: function(minQueryLength) {
        return `Type in ${minQueryLength} or more characters for results`;
      }
    });
    
    // Handle form submission
    const form = document.querySelector('form');
    const searchInput = document.getElementById('search');
    
    form.addEventListener('submit', function(event) {
      // This ensures the search button just performs a text search
      // without directly navigating to a project page
      if (searchInput.value) {
        // Let the form submit normally - this will trigger a search
        return true;
      }
      
      // If no search term, prevent empty searches
      event.preventDefault();
      return false;
    });
    
    // Inject GDS Transport font styling directly after component initialization
    // This ensures our styles will be applied last and override the component's default styles
    setTimeout(function() {
      const styleEl = document.createElement('style');
      styleEl.textContent = `
        /* Force GDS Transport font on all autocomplete elements */
        .autocomplete__wrapper * {
          font-family: "GDS Transport", arial, sans-serif !important;
        }
        
        .autocomplete__input {
          font-family: "GDS Transport", arial, sans-serif !important;
          font-size: 19px !important;
          line-height: 1.25 !important;
          padding: 5px !important;
          height: 40px !important;
          border: 2px solid #0b0c0c !important;
        }
        
        .autocomplete__menu {
          font-family: "GDS Transport", arial, sans-serif !important;
          background-color: #fff !important;
          border: 2px solid #0b0c0c !important;
          border-top: 0 !important;
          width: 100% !important;
          max-height: 342px !important;
          margin: 0 !important;
          padding: 0 !important;
        }
        
        .autocomplete__menu .autocomplete__option {
          font-family: "GDS Transport", arial, sans-serif !important;
          font-size: 16px !important;
          line-height: 1.5 !important;
          padding: 8px !important;
          border-bottom: 1px solid #b1b4b6 !important;
          color: #0b0c0c !important;
          background-color: #fff !important;
        }
        
        .autocomplete__menu .autocomplete__option--odd {
          background-color: #f3f2f1 !important;
        }
        
        .autocomplete__menu .autocomplete__option:hover,
        .autocomplete__menu .autocomplete__option--focused {
          background-color: #1d70b8 !important;
          border-color: #1d70b8 !important;
          color: white !important;
          outline: none !important;
        }
        
        .autocomplete__menu .autocomplete__option--selected {
          background-color: #1d70b8 !important;
          color: white !important;
        }
        
        /* Override media query styles */
        @media (min-width: 641px) {
          .autocomplete__hint,
          .autocomplete__input,
          .autocomplete__option {
            font-family: "GDS Transport", arial, sans-serif !important;
            font-size: 19px !important;
            line-height: 1.31579 !important;
          }
        }
      `;
      document.head.appendChild(styleEl);
    }, 100); // Small delay to ensure autocomplete is fully initialized
  });
</script>
{% endblock %}